// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameUserDailyTaskLog = "user_daily_task_log"

// UserDailyTaskLog mapped from table <user_daily_task_log>
type UserDailyTaskLog struct {
	ID          int64     `gorm:"column:id;primaryKey;autoIncrement:true;comment:用户积分变化日志唯一ID" json:"id"`                   // 用户积分变化日志唯一ID
	UserID      int64     `gorm:"column:user_id;not null;comment:用户唯一ID" json:"user_id"`                                    // 用户唯一ID
	Answer      string    `gorm:"column:answer;not null;comment:用户每日回答" json:"answer"`                                      // 用户每日回答
	CurrentDay  int32     `gorm:"column:current_day;not null;comment:记录回答问题天数offset，从2025-09-10 开始是第一天" json:"current_day"` // 记录回答问题天数offset，从2025-09-10 开始是第一天
	Badges      string    `gorm:"column:badges;not null;default:[];comment:本次交互用户获取的徽章， jsn list: [1,2,3,4]" json:"badges"` // 本次交互用户获取的徽章， jsn list: [1,2,3,4]
	TxHash      string    `gorm:"column:tx_hash;not null;comment:交易hash" json:"tx_hash"`                                    // 交易hash
	Points      int32     `gorm:"column:points;not null;comment:积分变化" json:"points"`                                        // 积分变化
	ExtraPoints int32     `gorm:"column:extra_points;not null;comment:积分变化" json:"extra_points"`                            // 积分变化
	UpdateAt    time.Time `gorm:"column:update_at;comment:更新时间" json:"update_at"`                                           // 更新时间
	CreateAt    time.Time `gorm:"column:create_at;default:CURRENT_TIMESTAMP;comment:创建时间" json:"create_at"`                 // 创建时间
}

// TableName UserDailyTaskLog's table name
func (*UserDailyTaskLog) TableName() string {
	return TableNameUserDailyTaskLog
}
